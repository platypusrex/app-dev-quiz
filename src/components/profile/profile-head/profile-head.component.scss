profile-head-cmp {
  .profile-header {
    overflow: visible;
    min-height: 150px;
    position: relative;
    margin-top: 50px;
    padding-top: 50px;
  }

  .profile-img-container {
    position: absolute;
    left: 50%;
    margin-left: -45px;
    top: -45px;
    background: #fff;
    width: 90px;
    height: 90px;
    border: 3px solid #fff;
    border-radius: 50%;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    object-fit: contain;
    padding: 2.5px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);

    &:before {
      content: "";
      position: absolute;
      border-radius: 50%;
      @include abs-pos(0, 0, 0, 0);
      @include prefix(box-shadow, inset 0 0 10px rgba(120, 120, 120, 0.4), webkit);
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
  }

  .profile-date-container {
    position: absolute;
    top: 0;
    left: 0;
    padding: 10px 10px;
    font-size: 1rem;

    ion-icon {
      color: map_get($colors, primary-dark);
      @include font-size(16);
    }

    span {
      color: map_get($colors, dark-gray);
    }
  }

  .edit-icon-container {
    width: 35px;
    height: 35px;
    @include abs-pos(0, 0);
    cursor: pointer;

    ion-icon {
      font-size: 2rem;
      color: map_get($colors, secondary);
    }
  }

  .profile-header-content {
    h1 {
      font-weight: 200;
      @include font-size(26);
      margin-bottom: 2px;
    }

    .profile-title {
      font-weight: 500;
      color: map_get($colors, gray);
    }

    .profile-description {
      color: map_get($colors, light-gray);
      @include font-size(12);
      margin: 10px 40px;
    }
  }

  .profile-stats-container {
    flex: 1;
    padding: 10px 5px 5px;

    span {
      @include font-size(9);
      text-transform: uppercase;
    }

    h2 {
      @include font-size(24);
      font-weight: 200;
    }

    &:nth-of-type(1) {
      h2 {
        color: map_get($colors, primary);
      }
    }

    &:nth-of-type(2) {
      h2 {
        color: map_get($colors, secondary);
      }
    }

    &:nth-of-type(3) {
      h2 {
        color: map_get($colors, tertiary);
      }
    }
  }
}